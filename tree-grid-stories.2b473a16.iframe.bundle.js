"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[7608],{"./packages/components/src/tree-grid/stories/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>stories});var react=__webpack_require__("./node_modules/react/index.js"),build_module=__webpack_require__("./packages/dom/build-module/index.js"),keycodes_build_module=__webpack_require__("./packages/keycodes/build-module/index.js");const RovingTabIndexContext=(0,react.createContext)(void 0),RovingTabIndexProvider=RovingTabIndexContext.Provider;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function RovingTabIndex({children}){const[lastFocusedElement,setLastFocusedElement]=(0,react.useState)(),providerValue=(0,react.useMemo)((()=>({lastFocusedElement,setLastFocusedElement})),[lastFocusedElement]);return(0,jsx_runtime.jsx)(RovingTabIndexProvider,{value:providerValue,children})}function getRowFocusables(rowElement){return build_module.T_.focusable.find(rowElement,{sequential:!0}).filter((focusable=>focusable.closest('[role="row"]')===rowElement))}function UnforwardedTreeGrid({children,onExpandRow=()=>{},onCollapseRow=()=>{},onFocusRow=()=>{},applicationAriaLabel,...props},ref){const onKeyDown=(0,react.useCallback)((event=>{const{keyCode,metaKey,ctrlKey,altKey}=event;if(metaKey||ctrlKey||altKey||![keycodes_build_module.UP,keycodes_build_module.WV,keycodes_build_module.RL,keycodes_build_module.pX,keycodes_build_module.Sd,keycodes_build_module.uR].includes(keyCode))return;event.stopPropagation();const{activeElement}=document,{currentTarget:treeGridElement}=event;if(!activeElement||!treeGridElement.contains(activeElement))return;const activeRow=activeElement.closest('[role="row"]');if(!activeRow)return;const focusablesInRow=getRowFocusables(activeRow),currentColumnIndex=focusablesInRow.indexOf(activeElement),canExpandCollapse=0===currentColumnIndex,cannotFocusNextColumn=canExpandCollapse&&("false"===activeRow.getAttribute("data-expanded")||"false"===activeRow.getAttribute("aria-expanded"))&&keyCode===keycodes_build_module.pX;if([keycodes_build_module.RL,keycodes_build_module.pX].includes(keyCode)){let nextIndex;if(nextIndex=keyCode===keycodes_build_module.RL?Math.max(0,currentColumnIndex-1):Math.min(currentColumnIndex+1,focusablesInRow.length-1),canExpandCollapse){if(keyCode===keycodes_build_module.RL){var _activeRow$getAttribu;if("true"===activeRow.getAttribute("data-expanded")||"true"===activeRow.getAttribute("aria-expanded"))return onCollapseRow(activeRow),void event.preventDefault();const level=Math.max(parseInt(null!==(_activeRow$getAttribu=activeRow?.getAttribute("aria-level"))&&void 0!==_activeRow$getAttribu?_activeRow$getAttribu:"1",10)-1,1),rows=Array.from(treeGridElement.querySelectorAll('[role="row"]'));let parentRow=activeRow;for(let i=rows.indexOf(activeRow);i>=0;i--){const ariaLevel=rows[i].getAttribute("aria-level");if(null!==ariaLevel&&parseInt(ariaLevel,10)===level){parentRow=rows[i];break}}getRowFocusables(parentRow)?.[0]?.focus()}if(keyCode===keycodes_build_module.pX){if("false"===activeRow.getAttribute("data-expanded")||"false"===activeRow.getAttribute("aria-expanded"))return onExpandRow(activeRow),void event.preventDefault();const focusableItems=getRowFocusables(activeRow);focusableItems.length>0&&focusableItems[nextIndex]?.focus()}return void event.preventDefault()}if(cannotFocusNextColumn)return;focusablesInRow[nextIndex].focus(),event.preventDefault()}else if([keycodes_build_module.UP,keycodes_build_module.WV].includes(keyCode)){const rows=Array.from(treeGridElement.querySelectorAll('[role="row"]')),currentRowIndex=rows.indexOf(activeRow);let nextRowIndex;if(nextRowIndex=keyCode===keycodes_build_module.UP?Math.max(0,currentRowIndex-1):Math.min(currentRowIndex+1,rows.length-1),nextRowIndex===currentRowIndex)return void event.preventDefault();const focusablesInNextRow=getRowFocusables(rows[nextRowIndex]);if(!focusablesInNextRow||!focusablesInNextRow.length)return void event.preventDefault();focusablesInNextRow[Math.min(currentColumnIndex,focusablesInNextRow.length-1)].focus(),onFocusRow(event,activeRow,rows[nextRowIndex]),event.preventDefault()}else if([keycodes_build_module.Sd,keycodes_build_module.uR].includes(keyCode)){const rows=Array.from(treeGridElement.querySelectorAll('[role="row"]')),currentRowIndex=rows.indexOf(activeRow);let nextRowIndex;if(nextRowIndex=keyCode===keycodes_build_module.Sd?0:rows.length-1,nextRowIndex===currentRowIndex)return void event.preventDefault();const focusablesInNextRow=getRowFocusables(rows[nextRowIndex]);if(!focusablesInNextRow||!focusablesInNextRow.length)return void event.preventDefault();focusablesInNextRow[Math.min(currentColumnIndex,focusablesInNextRow.length-1)].focus(),onFocusRow(event,activeRow,rows[nextRowIndex]),event.preventDefault()}}),[onExpandRow,onCollapseRow,onFocusRow]);return(0,jsx_runtime.jsx)(RovingTabIndex,{children:(0,jsx_runtime.jsx)("div",{role:"application","aria-label":applicationAriaLabel,children:(0,jsx_runtime.jsx)("table",{...props,role:"treegrid",onKeyDown,ref,children:(0,jsx_runtime.jsx)("tbody",{children})})})})}RovingTabIndex.displayName="RovingTabIndex",UnforwardedTreeGrid.displayName="UnforwardedTreeGrid";const tree_grid=(0,react.forwardRef)(UnforwardedTreeGrid);function UnforwardedTreeGridRow({children,level,positionInSet,setSize,isExpanded,...props},ref){return(0,jsx_runtime.jsx)("tr",{...props,ref,role:"row","aria-level":level,"aria-posinset":positionInSet,"aria-setsize":setSize,"aria-expanded":isExpanded,children})}UnforwardedTreeGridRow.displayName="UnforwardedTreeGridRow";const row=(0,react.forwardRef)(UnforwardedTreeGridRow),roving_tab_index_item=(0,react.forwardRef)((function UnforwardedRovingTabIndexItem({children,as:Component,...props},forwardedRef){const localRef=(0,react.useRef)(),ref=forwardedRef||localRef,{lastFocusedElement,setLastFocusedElement}=(0,react.useContext)(RovingTabIndexContext);let tabIndex;lastFocusedElement&&(tabIndex=lastFocusedElement===("current"in ref?ref.current:void 0)?0:-1);const allProps={ref,tabIndex,onFocus:event=>setLastFocusedElement?.(event.target),...props};return"function"==typeof children?children(allProps):Component?(0,jsx_runtime.jsx)(Component,{...allProps,children}):null}));function UnforwardedTreeGridItem({children,...props},ref){return(0,jsx_runtime.jsx)(roving_tab_index_item,{ref,...props,children})}UnforwardedTreeGridItem.displayName="UnforwardedTreeGridItem";const item=(0,react.forwardRef)(UnforwardedTreeGridItem);function UnforwardedTreeGridCell({children,withoutGridItem=!1,...props},ref){return(0,jsx_runtime.jsx)("td",{...props,role:"gridcell",children:withoutGridItem?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children}):(0,jsx_runtime.jsx)(item,{ref,children})})}UnforwardedTreeGridCell.displayName="UnforwardedTreeGridCell";const cell=(0,react.forwardRef)(UnforwardedTreeGridCell);var src_button=__webpack_require__("./packages/components/src/button/index.tsx"),input_control=__webpack_require__("./packages/components/src/input-control/index.tsx");const stories={title:"Components (Experimental)/TreeGrid",component:tree_grid,subcomponents:{TreeGridRow:row,TreeGridCell:cell},argTypes:{children:{control:{type:null}}},parameters:{sourceLink:"packages/components/src/tree-grid",actions:{argTypesRegex:"^on.*"},controls:{expanded:!0}}},Descender=({level})=>{if(1===level)return null;const indentation=" ".repeat(4*(level-1));return(0,jsx_runtime.jsx)("span",{"aria-hidden":"true",children:indentation+"├ "})};Descender.displayName="Descender";const Rows=({items=[],level=1})=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:items.map(((item,index)=>{const hasChildren=!!item.types&&!!item.types.length;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsxs)(row,{positionInSet:index+1,setSize:items.length,level,isExpanded:!0,children:[(0,jsx_runtime.jsx)(cell,{children:props=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Descender,{level}),(0,jsx_runtime.jsx)(src_button.zx,{variant:"primary",...props,children:item.name})]})}),(0,jsx_runtime.jsx)(cell,{children:props=>(0,jsx_runtime.jsx)(input_control.ZP,{label:"Description",hideLabelFromVision:!0,placeholder:"Description",...props})}),(0,jsx_runtime.jsx)(cell,{children:props=>(0,jsx_runtime.jsx)(input_control.ZP,{label:"Notes",hideLabelFromVision:!0,placeholder:"Notes",...props})})]}),hasChildren&&(0,jsx_runtime.jsx)(Rows,{items:item.types,level:level+1})]},item.name)}))}),Template=args=>(0,jsx_runtime.jsx)(tree_grid,{...args});Template.displayName="Template";const Default=Template.bind({});Default.args={children:(0,jsx_runtime.jsx)(Rows,{items:[{name:"Fruit",types:[{name:"Apple"},{name:"Orange"},{name:"Pear"}]},{name:"Vegetable",types:[{name:"Cucumber"},{name:"Parsnip"},{name:"Pumpkin"}]}]})}}}]);