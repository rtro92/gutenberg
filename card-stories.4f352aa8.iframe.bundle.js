"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[2478],{"./packages/components/src/card/card-footer/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>card_footer_component});var context_connect=__webpack_require__("./packages/components/src/ui/context/context-connect.ts"),component=__webpack_require__("./packages/components/src/flex/flex/component.tsx"),react=__webpack_require__("./node_modules/react/index.js"),use_context_system=__webpack_require__("./packages/components/src/ui/context/use-context-system.js"),styles=__webpack_require__("./packages/components/src/card/styles.ts"),use_cx=__webpack_require__("./packages/components/src/utils/hooks/use-cx.ts");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnconnectedCardFooter(props,forwardedRef){const footerProps=function useCardFooter(props){const{className,justify,isBorderless=!1,isShady=!1,size="medium",...otherProps}=(0,use_context_system.y)(props,"CardFooter"),cx=(0,use_cx.I)();return{...otherProps,className:(0,react.useMemo)((()=>cx(styles.$_,styles.E0,styles.tv,styles.F0[size],isBorderless&&styles.oB,isShady&&styles.mT,"components-card__footer",className)),[className,cx,isBorderless,isShady,size]),justify}}(props);return(0,jsx_runtime.jsx)(component.Z,{...footerProps,ref:forwardedRef})}UnconnectedCardFooter.displayName="UnconnectedCardFooter";const card_footer_component=(0,context_connect.Iq)(UnconnectedCardFooter,"CardFooter")},"./packages/components/src/card/card-header/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>card_header_component});var context_connect=__webpack_require__("./packages/components/src/ui/context/context-connect.ts"),component=__webpack_require__("./packages/components/src/flex/flex/component.tsx"),react=__webpack_require__("./node_modules/react/index.js"),use_context_system=__webpack_require__("./packages/components/src/ui/context/use-context-system.js"),styles=__webpack_require__("./packages/components/src/card/styles.ts"),use_cx=__webpack_require__("./packages/components/src/utils/hooks/use-cx.ts");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnconnectedCardHeader(props,forwardedRef){const headerProps=function useCardHeader(props){const{className,isBorderless=!1,isShady=!1,size="medium",...otherProps}=(0,use_context_system.y)(props,"CardHeader"),cx=(0,use_cx.I)();return{...otherProps,className:(0,react.useMemo)((()=>cx(styles.h4,styles.E0,styles.tv,styles.F0[size],isBorderless&&styles.oB,isShady&&styles.mT,"components-card__header",className)),[className,cx,isBorderless,isShady,size])}}(props);return(0,jsx_runtime.jsx)(component.Z,{...headerProps,ref:forwardedRef})}UnconnectedCardHeader.displayName="UnconnectedCardHeader";const card_header_component=(0,context_connect.Iq)(UnconnectedCardHeader,"CardHeader")},"./packages/components/src/heading/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>heading_component});var context_connect=__webpack_require__("./packages/components/src/ui/context/context-connect.ts"),component=__webpack_require__("./packages/components/src/view/component.tsx"),use_context_system=__webpack_require__("./packages/components/src/ui/context/use-context-system.js"),hook=__webpack_require__("./packages/components/src/text/hook.js"),font_size=__webpack_require__("./packages/components/src/ui/utils/font-size.ts"),colors_values=__webpack_require__("./packages/components/src/utils/colors-values.js"),config_values=__webpack_require__("./packages/components/src/utils/config-values.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnconnectedHeading(props,forwardedRef){const headerProps=function useHeading(props){const{as:asProp,level=2,...otherProps}=(0,use_context_system.y)(props,"Heading"),as=asProp||`h${level}`,a11yProps={};return"string"==typeof as&&"h"!==as[0]&&(a11yProps.role="heading",a11yProps["aria-level"]="string"==typeof level?parseInt(level):level),{...(0,hook.Z)({color:colors_values.D.gray[900],size:(0,font_size.gZ)(level),isBlock:!0,weight:config_values.Z.fontWeightHeading,...otherProps}),...a11yProps,as}}(props);return(0,jsx_runtime.jsx)(component.Z,{...headerProps,ref:forwardedRef})}UnconnectedHeading.displayName="UnconnectedHeading";const heading_component=(0,context_connect.Iq)(UnconnectedHeading,"Heading")},"./packages/components/src/card/stories/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FullBleedContent:()=>FullBleedContent,default:()=>stories});var context_connect=__webpack_require__("./packages/components/src/ui/context/context-connect.ts"),component=__webpack_require__("./packages/components/src/divider/component.tsx"),react=__webpack_require__("./node_modules/react/index.js"),use_context_system=__webpack_require__("./packages/components/src/ui/context/use-context-system.js"),styles=__webpack_require__("./packages/components/src/card/styles.ts"),use_cx=__webpack_require__("./packages/components/src/utils/hooks/use-cx.ts");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnconnectedCardDivider(props,forwardedRef){const dividerProps=function useCardDivider(props){const{className,...otherProps}=(0,use_context_system.y)(props,"CardDivider"),cx=(0,use_cx.I)();return{...otherProps,className:(0,react.useMemo)((()=>cx(styles.iz,styles.tv,"components-card__divider",className)),[className,cx])}}(props);return(0,jsx_runtime.jsx)(component.Z,{...dividerProps,ref:forwardedRef})}UnconnectedCardDivider.displayName="UnconnectedCardDivider";const card_divider_component=(0,context_connect.Iq)(UnconnectedCardDivider,"CardDivider");var view_component=__webpack_require__("./packages/components/src/view/component.tsx");function UnconnectedCardMedia(props,forwardedRef){const cardMediaProps=function useCardMedia(props){const{className,...otherProps}=(0,use_context_system.y)(props,"CardMedia"),cx=(0,use_cx.I)();return{...otherProps,className:(0,react.useMemo)((()=>cx(styles.pU,styles.E0,"components-card__media",className)),[className,cx])}}(props);return(0,jsx_runtime.jsx)(view_component.Z,{...cardMediaProps,ref:forwardedRef})}UnconnectedCardMedia.displayName="UnconnectedCardMedia";const card_media_component=(0,context_connect.Iq)(UnconnectedCardMedia,"CardMedia");var card_component=__webpack_require__("./packages/components/src/card/card/component.tsx"),card_header_component=__webpack_require__("./packages/components/src/card/card-header/component.tsx"),card_body_component=__webpack_require__("./packages/components/src/card/card-body/component.tsx"),card_footer_component=__webpack_require__("./packages/components/src/card/card-footer/component.tsx"),text_component=__webpack_require__("./packages/components/src/text/component.js"),heading_component=__webpack_require__("./packages/components/src/heading/component.tsx"),src_button=__webpack_require__("./packages/components/src/button/index.tsx");const stories={component:card_component.C,title:"Components/Card",subcomponents:{CardHeader:card_header_component.Z,CardBody:card_body_component.Z,CardDivider:card_divider_component,CardMedia:card_media_component,CardFooter:card_footer_component.Z},argTypes:{as:{control:{type:null}},children:{control:{type:null}}},parameters:{sourceLink:"packages/components/src/card",controls:{expanded:!0},docs:{source:{state:"open"}}}},Template=args=>(0,jsx_runtime.jsx)(card_component.C,{...args});Template.displayName="Template";const Default=Template.bind({});Default.args={children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(card_header_component.Z,{children:(0,jsx_runtime.jsx)(heading_component.Z,{children:"CardHeader"})}),(0,jsx_runtime.jsx)(card_body_component.Z,{children:(0,jsx_runtime.jsx)(text_component.Z,{children:"CardBody"})}),(0,jsx_runtime.jsx)(card_body_component.Z,{children:(0,jsx_runtime.jsx)(text_component.Z,{children:"CardBody (before CardDivider)"})}),(0,jsx_runtime.jsx)(card_divider_component,{}),(0,jsx_runtime.jsx)(card_body_component.Z,{children:(0,jsx_runtime.jsx)(text_component.Z,{children:"CardBody (after CardDivider)"})}),(0,jsx_runtime.jsx)(card_media_component,{children:(0,jsx_runtime.jsx)("img",{alt:"Card Media",src:"https://images.unsplash.com/photo-1566125882500-87e10f726cdc?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1867&q=80"})}),(0,jsx_runtime.jsxs)(card_footer_component.Z,{children:[(0,jsx_runtime.jsx)(text_component.Z,{children:"CardFooter"}),(0,jsx_runtime.jsx)(src_button.ZP,{variant:"secondary",children:"Action Button"})]})]})};const FullBleedContent=Template.bind({});FullBleedContent.args={...Default.args,children:(0,jsx_runtime.jsx)(card_media_component,{children:(0,jsx_runtime.jsx)("div",{style:{padding:16,background:"beige"},children:"Some full bleed content"})})},FullBleedContent.parameters??={},FullBleedContent.parameters.docs??={},FullBleedContent.parameters.docs.description??={},FullBleedContent.parameters.docs.description.story??="`CardMedia` provides a container for full-bleed content within a `Card`,\nsuch as images, video, or even just a background color. The corners will be rounded if necessary."}}]);